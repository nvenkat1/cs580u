#include "vector.h"
#include<stdlib.h>

Vector* initVector(){
        Vector *v = malloc(sizeof(Vector));
	(*v).data= NULL; 	//v->data= NULL;
	(*v).current_size = 0; 	//v->current_size = 0;
	(*v).capacity = 0;	//v->capacity = 0;
        return v;

}
void *  deleteVector(Vector *v){
        //free((*v).data);  wrong! as we dont knwo what data is
	//deleteData(v->data); 	//at start v->data will be NULL
	free(v);
	return NULL;
}

insert(Data d, int index, Vector *v){
	//allocation memory is expensive, hence we increase size of new array as double, //instead of incrementing what is only needed.
	//increamental expansion (Add as needed)  vs geometric expansion (Add twice size)
	if(index >= (*v).capacity){
		(*v).capacity *= 2 + 1;  //(Geometric Expansion)                //adding 1 for what is capacity is zero
		Data * newData = malloc(sizeof(Data) * (*v).capacity);
		//we got new data pointer for new momory;
		//we will have to null it out first. // no i think youm meant to say copy old to new here!
		memcpy( newData, (*v).d,  sizeof(Data)* (*v).current_size); //v.d or v.data ?
		free(v->data);
		(*v).data = newData;
		current_size = index + 1;

	}else if(index > current_size){
		current_size = index + 1;
	}else{
		//Current_size++;
	}
	v->data[index] = d ;
}
//implement clone(Data *d) update to insert
